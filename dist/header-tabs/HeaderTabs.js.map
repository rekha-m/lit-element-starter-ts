{"version":3,"file":"HeaderTabs.js","sourceRoot":"","sources":["../../src/header-tabs/HeaderTabs.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAGnC,IAAM,UAAU,GAAhB,MAAM,UAAW,SAAQ,UAAU;IAMxC;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC;IAGD,SAAS,CAAC,QAAa;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7D,IAAI,QAAQ,KAAK,CAAC,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QACpD,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;QACnE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;IAED,YAAY,CAAC,CAAM;QACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;kCAGmB,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;;;;;;KAO/D,CAAC;IACJ,CAAC;;AAxCe,iBAAM,GAAG,MAAM,AAAT,CAAU;AADrB,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CA0CtB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport { styles } from './HeaderTabs.css';\n\n@customElement('header-tabs')\nexport class HeaderTabs extends LitElement {\n  static override styles = styles;\n\n  _tabs: Element[];\n  _panels: Element[];\n\n  constructor() {\n    super();\n    this._tabs = Array.from(this.querySelectorAll(\"[slot=tab]\"));\n    console.log(this._tabs);\n    this._panels = Array.from(this.querySelectorAll(\"[slot=panel]\"));\n    this.selectTab(0);\n  }\n\n\n  selectTab(tabIndex: any) {\n    this._tabs.forEach((tab) => tab.removeAttribute(\"selected\"));\n    if (tabIndex !== 7) {\n      this._tabs[tabIndex].setAttribute(\"selected\", \"\");\n    }\n    this._panels.forEach((panel) => panel.removeAttribute(\"selected\"));\n    this._panels[tabIndex].setAttribute(\"selected\", \"\");\n  }\n\n  handleSelect(e: any) {\n    const index = this._tabs.indexOf(e.target);\n    this.selectTab(index);\n  }\n\n  override render() {\n    return html`\n      <nav>\n        <slot name=\"tab-start\"></slot>\n        <slot name=\"tab\" @click=${(e: Event) => this.handleSelect(e)}></slot>\n         <div class=\"tab-actions\">\n            <slot name=\"tab-actions\"></slot>\n         </div>\n      </nav>\n     \n      <slot name=\"panel\"></slot>\n    `;\n  }\n}\n"]}