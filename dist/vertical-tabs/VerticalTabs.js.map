{"version":3,"file":"VerticalTabs.js","sourceRoot":"","sources":["../../src/vertical-tabs/VerticalTabs.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,qBAAqB,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAChF,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB,CAAC;AAGrC,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAIY,kBAAa,GAAG,CAAC,CAAC;IA6CrC,CAAC;IAzCU,YAAY;QACnB,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEO,YAAY,CAAC,KAAa;QAChC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEO,eAAe,CAAC,KAAa;QACnC,IAAI,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE;YAC7B,GAAG,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACjC,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC,KAAK,KAAK,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IACjC,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;kCAKmB,CAAC,CAAQ,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;;;;;KAM9D,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,CAAQ;QAC1B,MAAM,GAAG,GAAG,CAAC,CAAC,MAAqB,CAAC;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;YACjB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC;;AA1Ce,mBAAM,GAAG,MAAM,AAAT,CAAU;AALgB;IAA/C,qBAAqB,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;2CAA+B;AACpB;IAAjD,qBAAqB,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;6CAAiC;AAEzD;IAAhB,KAAK,EAAE;mDAA2B;AAJxB,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAiDxB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, queryAssignedElements, state } from 'lit/decorators.js';\nimport { styles } from './VerticalTabs.css';\n\n@customElement('vertical-tabs')\nexport class VerticalTabs extends LitElement {\n  @queryAssignedElements({ slot: 'tab' }) private _tabs!: HTMLElement[];\n  @queryAssignedElements({ slot: 'panel' }) private _panels!: HTMLElement[];\n\n  @state() private selectedIndex = 0;\n\n  static override styles = styles;\n\n  override firstUpdated() {\n    this.updateSelection(0);\n  }\n\n  private handleSelect(index: number) {\n    this.updateSelection(index);\n  }\n\n  private updateSelection(index: number) {\n    this._tabs?.forEach((tab, i) => {\n      tab.toggleAttribute('selected', i === index);\n    });\n    this._panels?.forEach((panel, i) => {\n      panel.toggleAttribute('selected', i === index);\n    });\n    this.selectedIndex = index;\n    console.log(this.selectedIndex)\n  }\n\n  override render() {\n    return html`\n      <nav>\n        <div class=\"tab-header\">\n            <slot name=\"tab-header\"></slot>\n        </div>\n        <slot name=\"tab\" @click=${(e: Event) => this.handleClick(e)}></slot>\n      </nav>\n      \n      <div class=\"panel-container\">\n        <slot name=\"panel\"></slot>\n      </div>\n    `;\n  }\n\n  private handleClick(e: Event) {\n    const tab = e.target as HTMLElement;\n    const index = this._tabs.indexOf(tab);\n    if (index !== -1) {\n      this.handleSelect(index);\n    }\n  }\n}\n"]}